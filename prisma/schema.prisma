generator client {
  provider        = "prisma-client-js"
  output          = "./databases/main"
  previewFeatures = ["views"]
  binaryTargets   = ["native", "debian-openssl-1.1.x", "rhel-openssl-1.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id       Int            @id @default(autoincrement())
  name     String
  email    String         @unique
  password String
  username String?        @unique(map: "User_user_key")
  tokens   RefreshToken[]
  roles    UserRole[]
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String
  permissions RolePermission[]
  users       UserRole[]
}

model Permission {
  id    Int              @id @default(autoincrement())
  name  String
  roles RolePermission[]
}

model UserRole {
  userId Int
  roleId Int
  role   Role @relation(fields: [roleId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@id([userId, roleId])
}

model RolePermission {
  roleId       Int
  permissionId Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  role         Role       @relation(fields: [roleId], references: [id])

  @@id([roleId, permissionId])
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String
  createdAt DateTime @default(now())
  idUser    Int
  revoked   Boolean  @default(false)
  user      User     @relation(fields: [idUser], references: [id])
}
